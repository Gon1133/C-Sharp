#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _21004063_PhanHoangHuy_T8
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLNS_HUY")]
	public partial class QLNS_HUYDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBophan(Bophan instance);
    partial void UpdateBophan(Bophan instance);
    partial void DeleteBophan(Bophan instance);
    partial void InsertNhanvien(Nhanvien instance);
    partial void UpdateNhanvien(Nhanvien instance);
    partial void DeleteNhanvien(Nhanvien instance);
    #endregion
		
		public QLNS_HUYDataContext() : 
				base(global::_21004063_PhanHoangHuy_T8.Properties.Settings.Default.QLNS_HUYConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLNS_HUYDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLNS_HUYDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLNS_HUYDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLNS_HUYDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Bophan> Bophans
		{
			get
			{
				return this.GetTable<Bophan>();
			}
		}
		
		public System.Data.Linq.Table<Nhanvien> Nhanviens
		{
			get
			{
				return this.GetTable<Nhanvien>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bophan")]
	public partial class Bophan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDBophan;
		
		private string _MSBophan;
		
		private string _TenBophan;
		
		private EntitySet<Nhanvien> _Nhanviens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDBophanChanging(int value);
    partial void OnIDBophanChanged();
    partial void OnMSBophanChanging(string value);
    partial void OnMSBophanChanged();
    partial void OnTenBophanChanging(string value);
    partial void OnTenBophanChanged();
    #endregion
		
		public Bophan()
		{
			this._Nhanviens = new EntitySet<Nhanvien>(new Action<Nhanvien>(this.attach_Nhanviens), new Action<Nhanvien>(this.detach_Nhanviens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBophan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDBophan
		{
			get
			{
				return this._IDBophan;
			}
			set
			{
				if ((this._IDBophan != value))
				{
					this.OnIDBophanChanging(value);
					this.SendPropertyChanging();
					this._IDBophan = value;
					this.SendPropertyChanged("IDBophan");
					this.OnIDBophanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSBophan", DbType="VarChar(50)")]
		public string MSBophan
		{
			get
			{
				return this._MSBophan;
			}
			set
			{
				if ((this._MSBophan != value))
				{
					this.OnMSBophanChanging(value);
					this.SendPropertyChanging();
					this._MSBophan = value;
					this.SendPropertyChanged("MSBophan");
					this.OnMSBophanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenBophan", DbType="NVarChar(50)")]
		public string TenBophan
		{
			get
			{
				return this._TenBophan;
			}
			set
			{
				if ((this._TenBophan != value))
				{
					this.OnTenBophanChanging(value);
					this.SendPropertyChanging();
					this._TenBophan = value;
					this.SendPropertyChanged("TenBophan");
					this.OnTenBophanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bophan_Nhanvien", Storage="_Nhanviens", ThisKey="IDBophan", OtherKey="IDBophan")]
		public EntitySet<Nhanvien> Nhanviens
		{
			get
			{
				return this._Nhanviens;
			}
			set
			{
				this._Nhanviens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Nhanviens(Nhanvien entity)
		{
			this.SendPropertyChanging();
			entity.Bophan = this;
		}
		
		private void detach_Nhanviens(Nhanvien entity)
		{
			this.SendPropertyChanging();
			entity.Bophan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nhanvien")]
	public partial class Nhanvien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDNhanvien;
		
		private string _MSNhanvien;
		
		private string _Hoten;
		
		private System.Nullable<System.DateTime> _Ngaysinh;
		
		private System.Nullable<bool> _Gioitinh;
		
		private string _Email;
		
		private string _Diachi;
		
		private string _SDT;
		
		private System.Nullable<int> _IDBophan;
		
		private EntityRef<Bophan> _Bophan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDNhanvienChanging(int value);
    partial void OnIDNhanvienChanged();
    partial void OnMSNhanvienChanging(string value);
    partial void OnMSNhanvienChanged();
    partial void OnHotenChanging(string value);
    partial void OnHotenChanged();
    partial void OnNgaysinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaysinhChanged();
    partial void OnGioitinhChanging(System.Nullable<bool> value);
    partial void OnGioitinhChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDiachiChanging(string value);
    partial void OnDiachiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnIDBophanChanging(System.Nullable<int> value);
    partial void OnIDBophanChanged();
    #endregion
		
		public Nhanvien()
		{
			this._Bophan = default(EntityRef<Bophan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNhanvien", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDNhanvien
		{
			get
			{
				return this._IDNhanvien;
			}
			set
			{
				if ((this._IDNhanvien != value))
				{
					this.OnIDNhanvienChanging(value);
					this.SendPropertyChanging();
					this._IDNhanvien = value;
					this.SendPropertyChanged("IDNhanvien");
					this.OnIDNhanvienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSNhanvien", DbType="VarChar(50)")]
		public string MSNhanvien
		{
			get
			{
				return this._MSNhanvien;
			}
			set
			{
				if ((this._MSNhanvien != value))
				{
					this.OnMSNhanvienChanging(value);
					this.SendPropertyChanging();
					this._MSNhanvien = value;
					this.SendPropertyChanged("MSNhanvien");
					this.OnMSNhanvienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hoten", DbType="NVarChar(50)")]
		public string Hoten
		{
			get
			{
				return this._Hoten;
			}
			set
			{
				if ((this._Hoten != value))
				{
					this.OnHotenChanging(value);
					this.SendPropertyChanging();
					this._Hoten = value;
					this.SendPropertyChanged("Hoten");
					this.OnHotenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaysinh", DbType="Date")]
		public System.Nullable<System.DateTime> Ngaysinh
		{
			get
			{
				return this._Ngaysinh;
			}
			set
			{
				if ((this._Ngaysinh != value))
				{
					this.OnNgaysinhChanging(value);
					this.SendPropertyChanging();
					this._Ngaysinh = value;
					this.SendPropertyChanged("Ngaysinh");
					this.OnNgaysinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gioitinh", DbType="Bit")]
		public System.Nullable<bool> Gioitinh
		{
			get
			{
				return this._Gioitinh;
			}
			set
			{
				if ((this._Gioitinh != value))
				{
					this.OnGioitinhChanging(value);
					this.SendPropertyChanging();
					this._Gioitinh = value;
					this.SendPropertyChanged("Gioitinh");
					this.OnGioitinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diachi", DbType="NVarChar(50)")]
		public string Diachi
		{
			get
			{
				return this._Diachi;
			}
			set
			{
				if ((this._Diachi != value))
				{
					this.OnDiachiChanging(value);
					this.SendPropertyChanging();
					this._Diachi = value;
					this.SendPropertyChanged("Diachi");
					this.OnDiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(50)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBophan", DbType="Int")]
		public System.Nullable<int> IDBophan
		{
			get
			{
				return this._IDBophan;
			}
			set
			{
				if ((this._IDBophan != value))
				{
					if (this._Bophan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDBophanChanging(value);
					this.SendPropertyChanging();
					this._IDBophan = value;
					this.SendPropertyChanged("IDBophan");
					this.OnIDBophanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bophan_Nhanvien", Storage="_Bophan", ThisKey="IDBophan", OtherKey="IDBophan", IsForeignKey=true)]
		public Bophan Bophan
		{
			get
			{
				return this._Bophan.Entity;
			}
			set
			{
				Bophan previousValue = this._Bophan.Entity;
				if (((previousValue != value) 
							|| (this._Bophan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bophan.Entity = null;
						previousValue.Nhanviens.Remove(this);
					}
					this._Bophan.Entity = value;
					if ((value != null))
					{
						value.Nhanviens.Add(this);
						this._IDBophan = value.IDBophan;
					}
					else
					{
						this._IDBophan = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bophan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
